legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(11, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(10, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
legend(8, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(8, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(9, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(10, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(10, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "pink", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(10, 25, c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
legend(x="topright", c("국어","수학", "영어"), cex=2.0, fill=rainbow(3))
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=2.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.5) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=0.5) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=1, space=0.5) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=1, space=0.7) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=2, space=0.7) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=2, space=0.7) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=0.7) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=10.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=50.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=0.8) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=2) #첫번째와 두번째는 학번과 성명이다.
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, width=5.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=5.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0)
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0)
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0)
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0)
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0)
dev.off()
#install.packages("showtext")
library(showtext)
showtext_auto()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=2.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=2.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.5) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.5, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=1.0, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
legend(x="topright", c("국어","수학", "영어"), cex=0.8, fill=rainbow(3))
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.7, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=0.8, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.6, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), cex=0.8, fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.6, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), fill=rainbow(3))
dev.copy(png, "output/clicklog4.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.6, cex.main=1.0, space=1.0) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), fill=rainbow(3))
dev.copy(png, "output/clicklog4.png",height=400, width=700)
dev.off()
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.6, cex.main=1.0, space=0.5) #첫번째와 두번째는 학번과 성명이다.
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.0, space=0.5) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), fill=rainbow(3))
dev.copy(png, "output/clicklog4.png",height=400, width=700)
dev.off()
#문제 2 #lab10.R 2번문제 참고함
df <- read.table("data/product_click.log")
names(df)=c('clicktime','pid')
dates <- as.POSIXlt(as.character(df$clicktime), tryFormats="%Y%m%d%H%M")
#dates$hour #exam8.R 참고함
시간대<-table(dates$hour)
pie(시간대, main="파이그래프 실습", col.main = "blue", col=colors(10), labels=paste(names(시간대), "~", as.numeric(names(시간대))+1))
dev.copy(png, "output/clicklog2.png")
dev.off()
library(showtext)
showtext_auto()
par(c("mar","mfrow"))
#par(mar=c(5.1, 4.1, 4.1, 2.1), mfrow=c(1,1)) #잘못 건드렸을 시 초기상태로 되돌리는 코드
#문제 1
클릭 <- read.table("data/product_click.log", sep=" ")
횟수 <- table(클릭[2]) #table()은 exam2.R에서 최초로 나옴. 중복된 값이 몇개나 나왔는지 보여준다.
barplot(횟수, main="세로바 그래프 실습", col.main= "red", xlab="상품ID", beside = T,
ylab="클릭수", col=terrain.colors(10))
dev.copy(png, "output/clicklog1.png")
dev.off()
#문제 2 #lab10.R 2번문제 참고함
df <- read.table("data/product_click.log")
names(df)=c('clicktime','pid')
dates <- as.POSIXlt(as.character(df$clicktime), tryFormats="%Y%m%d%H%M")
#dates$hour #exam8.R 참고함
시간대<-table(dates$hour)
pie(시간대, main="파이그래프 실습", col.main = "blue", col=colors(10), labels=paste(names(시간대), "~", as.numeric(names(시간대))+1))
dev.copy(png, "output/clicklog2.png")
dev.off()
#문제 3
성적 <- read.table("data/성적.txt", header=TRUE, sep="\t")
boxplot(성적[3:5], main="과목별 성적 분포", col.main = "orange", col=rainbow(3),  ylim=c(0,10), cex.main=1.5) #첫번째와 두번째는 학번과 성명이다.
dev.copy(png, "output/clicklog3.png")
dev.off()
#문제 4
xname <- c("길동", "둘리", "또치", "도우너", "희동", "듀크", "턱시", "토토로", "올라프", "우디")
barplot(t(성적[3:5]), main="학생별 점수", col.main = "magenta", col=rainbow(3),  ylim=c(0,25),  names.arg=xname, cex.names = 0.8, cex.main=1.0, space=0.5) #첫번째와 두번째는 학번과 성명이다.
legend(x="topright", c("국어","수학", "영어"), fill=rainbow(3))
dev.copy(png, "output/clicklog4.png",height=400, width=700) #여기서 크기값을 지정해줘서 legend의 글씨가 잘리는 것을 막는다.
dev.off()
cars
cars[,2]
클릭
#문제 1
클릭 <- read.table("data/product_click.log", sep=" ")
클릭
클릭[2]
cars[2]
cars[,2]
Petal
boxplot(Petal.Length~Species,            # 자료와 그룹 정보 # ~Species를 주지 않으면 (데이터개수)150개를 petal.Length 하나로 그리게 될 거다. ~Species라는 column을 물결표시와 함께 지정했다. 그럼 이렇게 해석한다. sepecies별로 Petal.length를 가지고 boxplot을 그려라. 지금 species가 3개니까 각각 boxplot을 그린다고 보면 되겠다.
data=iris,                       # 자료가 저장된 자료구조
main='품종별 꽃잎의 길이',       # 그래프의 제목
col=c('green','yellow','blue'))  # 상자들의 색
iris$Species
as.numeric(iris$Species)
iris
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
str(mpg)
str(mpg)
str(ggplot2::mpg)
str(ggplot2::mpg) #ggplot2의 mpg를 쓸 경우 패키지를 로드 안하고 쓸 거라면 이렇게 쓰면 된다. #tibble 타입인데 업그레이드된 데이터객체라고 생각하면 된다.
head(ggplot2::mpg) #위에 6개만 데이터를 보여줌. 어떤 컬럼명과 데이터 사이에 어떤 타입인지도 보여준다.
mpg <- as.data.frame(ggplot2::mpg)
exam
exam <- read.csv("data/csv_exam.csv") #수업에 사용할 csv 파일을 읽어오고 있다.
exam
#exam10.R 관련
#다음 문제들을 최대한 dplyr 패키지의 함수들과 %>% 기호(체인 함수)를 사용해서 해결하시오.
#data/emp.csv 의 내용을 읽어서 emp 변수를 생성한다.
emp <- read.csv(data/emp.csv)
#exam10.R 관련
#다음 문제들을 최대한 dplyr 패키지의 함수들과 %>% 기호(체인 함수)를 사용해서 해결하시오.
#data/emp.csv 의 내용을 읽어서 emp 변수를 생성한다.
emp <- read.csv("data/emp.csv")
emp
emp
library(dplyr) # detach("package:dplyr") 는 패키지에 대해서만 쓰는게 아니라 데이터에 대해서도 쓴다. 로드되어있던 API를 해제하는 기능이다.
library(dplyr) # detach("package:dplyr") 는 패키지에 대해서만 쓰는게 아니라 데이터에 대해서도 쓴다. 로드되어있던 API를 해제하는 기능이다.
install.packages("tidyr") # 추가
library(tidyr)
library(dplyr)
library(dplyr) # detach("package:dplyr") 는 패키지에 대해서만 쓰는게 아니라 데이터에 대해서도 쓴다. 로드되어있던 API를 해제하는 기능이다.
#exam10.R 관련
#다음 문제들을 최대한 dplyr 패키지의 함수들과 %>% 기호(체인 함수)를 사용해서 해결하시오.
#data/emp.csv 의 내용을 읽어서 emp 변수를 생성한다.
emp <- read.csv("data/emp.csv")
emp
#[문제1] 직무가 MANAGER 인 직원들의 정보를 출력한다.
emp %>% filter(job == "MANAGER")
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
exam %>% select(empno, name, sal)
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(empno, name, sal)
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(empno, name, sal)
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(empno, ename, sal)
#[문제3] emp 에서 사번만 빼고 출력한다.
emp %>% select(-empno)
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(이름 = empno, ename, sal)
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(사번 = empno, 이름 = ename, 월급 = sal) #해봤는데 됨
#[문제4] emp 에서 ename 과 sal컬럼만 출력한다.
emp %>% select(ename, sal)
#[문제5] 직무별 직원수를 출력한다.
emp %>% count(job)
#[문제6] 월급이 1000 이상이고 3000이하인 사원들의 이름, 월급, 부서번호를 출력한다.
emp %>% filter(sal >=1000 & sal <= 3000) %>% select(ename, sal, deptno)
#[문제7] emp 에서 직무가 ANALYST 가 아닌 사원들의 이름, 직무, 월급을 출력한다.
emp %>% filter(job != ANALYST) %>% select(ename, job, sal)
#[문제7] emp 에서 직무가 ANALYST 가 아닌 사원들의 이름, 직무, 월급을 출력한다.
emp %>% filter(job != "ANALYST") %>% select(ename, job, sal)
cat("정상 수행..\n")
#[문제8] emp 에서 직무가 SALESMAN 이거나 ANALYST 인 사원들의 이름, 직무를 출력한다.
emp %>% filter(job == ("ANALYST" | "SALESMAN")) %>% select(ename, job)
#[문제8] emp 에서 직무가 SALESMAN 이거나 ANALYST 인 사원들의 이름, 직무를 출력한다.
emp %>% filter(job == "ANALYST" | job == "SALESMAN") %>% select(ename, job)
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% count(job) %>% summary(s = sum())
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% count(job) %>% summarise(s = sum())
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% count(deptno) %>% summarise(s = sum())
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% count(deptno) %>% select(sal)
group_by(deptno)
emp %>% group_by(deptno)
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(deptno) %>% select(sal)
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(deptno) %>% summarise(sum_sal = sum(sal))
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(부서번호 = deptno) %>% summarise(월급 = sum(sal))
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(부서번호 = deptno) %>% summarise(월급 총합 = sum(sal))
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(부서번호 = deptno) %>% summarise(월급총합 = sum(sal))
#[문제10] 월급이 적은 순으로 모든 직원 정보를 출력한다.
emp %>% arrange(sal)
#[문제11] 월급이 제일 많은 직원의 정보를 출력한다.
emp %>% arrange(desc(sal)) %>% head(1)
emp %>% rename(sal = salary, comm = commrate)
emp %>% rename(salary = sal, commrate = comm)
#[문제12] 직원들의 월급을 보관하고 있는 컬럼의 컬럼명을 sal에서 salary 로 변경하고
#커미션 정보 저장한 컬럼의 컬럼명를 comm 에서 commrate 로 변경한 후 empnew 라는 새로운 데이터셋을 생성한다.
empnew <- emp %>% rename(salary = sal, commrate = comm)
empnew
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc(sal)) >%> head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc(sal)) %>% head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange() %>% head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc()) %>% head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc()) %>% head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange() %>% head(-1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange() %>% head(-1)
emp %>% count(deptno)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% arrange(desc(count(deptno))) %>% head(-1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% arrange(desc(count(deptno)))
emp %>% arrange(desc(deptno))
emp %>% arrange(desc(deptno)) %>% count()
emp %>% count(deptno)
emp %>% count(deptno) %>% arrange()
emp %>% count(deptno) %>% arrange(desc())
emp %>% count(deptno) %>% arrange(desc(n))
emp %>% arrange(desc(count(deptno)))
emp %>% count(deptno) %>% arrange(desc(n)) > head(1)
emp %>% count(deptno) %>% arrange(desc(n)) %>% head(1)
#[문제14] 각 직원들 이름의 문자 길이를 저장하는 enamelength 라는 컬럼을 추가한 다음에 이름 길이가 짧은 순으로 직원의 이름을 출력한다.
emp %>% mutate(enamelength = nchar(ename))
#[문제14] 각 직원들 이름의 문자 길이를 저장하는 enamelength 라는 컬럼을 추가한 다음에 이름 길이가 짧은 순으로 직원의 이름을 출력한다.
emp %>% mutate(enamelength = nchar(ename)) %>% arrange(enamelength)
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% count(comm)
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% filter(comm != NA)
emp
emp
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% count(comm) %>% filter(comm != NA)
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% count(comm)
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% count(comm) %>% filter(comm != "NA")
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% count(comm) %>% filter(comm != "NA")
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% filter(comm != "NA") %>% count(comm)
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% filter(comm != "NA") %>% count(comm) %>%  summarise(sum(n))
#다음 문제들을 최대한 dplyr 패키지의 함수들과 %>% 기호(체인 함수)를 사용해서 해결하시오.
#data/emp.csv 의 내용을 읽어서 emp 변수를 생성한다.
emp <- read.csv("data/emp.csv")
#[문제1] 직무가 MANAGER 인 직원들의 정보를 출력한다.
emp %>% filter(job == "MANAGER")
#[문제2] emp 에서 사번, 이름, 월급을 출력한다.
emp %>% select(사번 = empno, 이름 = ename, 월급 = sal) #해봤는데 됨
#[문제3] emp 에서 사번만 빼고 출력한다.
emp %>% select(-empno)
#[문제4] emp 에서 ename 과 sal컬럼만 출력한다.
emp %>% select(ename, sal)
#[문제5] 직무별 직원수를 출력한다.
emp %>% count(job)
#[문제6] 월급이 1000 이상이고 3000이하인 사원들의 이름, 월급, 부서번호를 출력한다.
emp %>% filter(sal >=1000 & sal <= 3000) %>% select(ename, sal, deptno)
#[문제7] emp 에서 직무가 ANALYST 가 아닌 사원들의 이름, 직무, 월급을 출력한다.
emp %>% filter(job != "ANALYST") %>% select(ename, job, sal)
#[문제8] emp 에서 직무가 SALESMAN 이거나 ANALYST 인 사원들의 이름, 직무를 출력한다.
emp %>% filter(job == "ANALYST" | job == "SALESMAN") %>% select(ename, job)
#[문제9] 부서별 직원들 월급의 합을 출력한다.
emp %>% group_by(부서번호 = deptno) %>% summarise(월급총합 = sum(sal))
#[문제10] 월급이 적은 순으로 모든 직원 정보를 출력한다.
emp %>% arrange(sal)
#[문제11] 월급이 제일 많은 직원의 정보를 출력한다.
emp %>% arrange(desc(sal)) %>% head(1)
#[문제12] 직원들의 월급을 보관하고 있는 컬럼의 컬럼명을 sal에서 salary 로 변경하고
#커미션 정보 저장한 컬럼의 컬럼명를 comm 에서 commrate 로 변경한 후 empnew 라는 새로운 데이터셋을 생성한다.
empnew <- emp %>% rename(salary = sal, commrate = comm)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc(n)) %>% head(1)
#[문제14] 각 직원들 이름의 문자 길이를 저장하는 enamelength 라는 컬럼을 추가한 다음에 이름 길이가 짧은 순으로 직원의 이름을 출력한다.
emp %>% mutate(enamelength = nchar(ename)) %>% arrange(enamelength) #nchar은 exam8.R
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% filter(comm != "NA") %>% count(comm) %>%  summarise(sum(n))
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc(n)) %>% head(1)
#[문제13] 가장 많은 인원이 일하고 있는 부서 번호를 출력한다.
emp %>% count(deptno) %>% arrange(desc(n)) %>% head(1) %>% select(deptno)
#[문제14] 각 직원들 이름의 문자 길이를 저장하는 enamelength 라는 컬럼을 추가한 다음에 이름 길이가 짧은 순으로 직원의 이름을 출력한다.
emp %>% mutate(enamelength = nchar(ename)) %>% arrange(enamelength) #nchar은 exam8.R
#[문제14] 각 직원들 이름의 문자 길이를 저장하는 enamelength 라는 컬럼을 추가한 다음에 이름 길이가 짧은 순으로 직원의 이름을 출력한다.
emp %>% mutate(enamelength = nchar(ename)) %>% arrange(enamelength) %>% select(ename) #nchar은 exam8.R
emp %>% filter(!is.na(comm)) %>% summarise(comm = n())
#[문제15] 커미션이 정해진 직원들의 명수를 출력한다.
emp %>% filter(comm != "NA") %>% count(comm) %>%  summarise(sum(n))
emp %>% filter(!is.na(comm)) %>% tally()
mpg
# 학생 1~5번 시험 데이터(프레임) 생성
(group_a <- data.frame(id = c(1, 2, 3, 4, 5),  test = c(60, 80, 70, 90, 85)))
# 학생 6~10번 시험 데이터(프레임) 생성
(group_b <- data.frame(id = c(6, 7, 8, 9, 10),  test = c(70, 83, 65, 95, 80)))
bind_rows(group_a, group_b)
bind_cols(group_a, group_b)
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5, 4, 3, 4, NA))
View(df)
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5, 4, 3, 4, NA))
View(df)
# 결측치 확인하기
is.na(df)         # 결측치 확인
# 결측치가 하나라도 있으면 제거하기
df_nomiss2 <- na.omit(df)  # 모든 변수에 결측치 없는 데이터 추출 #데이터 프레임 내에 모든 결측치(NA)를 제거한다.
df_nomiss2
library(tidyr)
library(dplyr)
exam <- read.csv("data/csv_exam.csv")
exam[c(1, 5, 3, 8, 15, 20), "math"] <- NA
exam
fill(exam, math, .direction = "down") # 바로 위의 데이터를 내려서 결측치(NA)를 채운다.#fill()은 tidyr패키지에서 제공한다. #이렇게 하면 맨 위의 행은 NA를 다른 값으로 채우지 못한다.
fill(exam, math, .direction = "up") # 바로 아래의 데이터를 올려서 결측치(NA)를 채운다. #이렇게 하면 맨 아래의 행은 NA를 다른 값으로 채우지 못한다.
fill(exam, math, .direction = "updown")
nums1 <- 1:10
boxplot(nums1)
boxplot.stats(nums1) #최솟값, 2사분위, 3사분위, 최댓값, 중간값, 평균 등
